<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.boot.adolesce.module.users.mapper.xmlstyle.UsersXmlMapper">
	<resultMap id="BaseResultMap" type="com.boot.adolesce.module.users.entity.Users">
		<id column="id" property="id"/>
		<result column="user_name" property="userName"/>
		<result column="pass_word" property="passWord"/>
		<!-- <result column="user_sex" property="userSex" javaType="com.boot.users.enums.UsersSexEnum"/> -->
		<result column="age" property="age"/>
		<result column="birthday" property="birthday" jdbcType="TIMESTAMP"/>
	</resultMap>

	<sql id="Base_Column_List">
		id, user_name, pass_word, age, birthday
	</sql>

	<insert id="insert" parameterType="com.boot.adolesce.module.users.entity.Users">
		INSERT INTO
		users
		(id,user_name,pass_word,age,birthday)
		VALUES
		(#{id}, #{userName}, #{passWord}, #{age}, #{birthday})
	</insert>

	<insert id="batchInsert" parameterType="java.util.List">
		INSERT INTO
		users
		(id,user_name,pass_word,age,birthday)
		VALUES
		<foreach collection="list" item="users" separator=",">
			(#{users.id}, #{users.userName}, #{users.passWord}, #{users.age}, #{users.birthday})
		</foreach>
	</insert>

	<delete id="deleteById" parameterType="java.lang.Long">
		DELETE FROM
		users
		WHERE
		id =#{id}
	</delete>

	<delete id="deleteByIds" parameterType="java.util.List">
		DELETE FROM
		users
		WHERE
		id IN
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>

	<delete id="deleteByIdsStr" parameterType="String">
		DELETE FROM
		users
		WHERE
		FIND_IN_SET(id,#{ids})
	</delete>

	<update id="update" parameterType="com.boot.adolesce.module.users.entity.Users">
		UPDATE
		users
		<set>
			<if test="userName != null">
				user_name = #{userName},
			</if>
			<if test="passWord != null">
				pass_word = #{passWord},
			</if>
			<if test="birthday != null">
				birthday = #{birthday},
			</if>
			<if test="age != null">
				age = #{age},
			</if>
		</set>
		WHERE
		id = #{id}
	</update>

	<select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM users
		WHERE id = #{id}
	</select>

	<select id="queryByParam" parameterType="com.boot.adolesce.module.users.entity.Users" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM users
		<where>
			<if test="userName != null">
				<!--AND user_name like CONCAT('%' ,#{userName}, '%')-->
				AND user_name like '%${userName}%'
			</if>
			<if test="passWord != null">
				AND pass_word = #{passWord}
			</if>
			<if test="startTime != null">
				AND DATE_FORMAT(birthday,'%Y-%m-%d') &gt;= #{startTime}
			</if>
			<if test="endTime != null">
				AND DATE_FORMAT(birthday,'%Y-%m-%d') &lt;= #{endTime}
			</if>
			<choose>
				<when test="birthday != null">
					and DATE_FORMAT(birthday,'%Y-%m-%d %H:%i:%s') = #{birthdayStr}
				</when>
				<when test="birthday == null">
				</when>
				<otherwise>
					AND age = #{age}
				</otherwise>
			</choose>
		</where>
	</select>
</mapper>